---------------------------------------
-- Functions:
---------------------------------------
Integer joaat(String text)
nil     sleep(Number seconds)
nil     require_game_build(int build)


---------------------------------------
-- Globals:
---------------------------------------
bool    globals.get_bool(Integer index)
Number  globals.get_float(Integer index)
Integer globals.get_int(Integer index)
String  globals.get_string(Integer index, Integer maxSize)
Integer globals.get_uint(Integer index)
nil     globals.set_bool(Integer index, bool value)
nil     globals.set_float(Integer index, Number value)
nil     globals.set_int(Integer index, Integer value)
nil     globals.set_string(Integer index, String value, Integer maxSize)
nil     globals.set_uint(Integer index, Integer value)


---------------------------------------
-- Menu:
---------------------------------------
Integer --[[ major version ]], 
Integer --[[ minor version ]], 
Integer --[[ build version ]], 
Integer --[[ patch version ]] 
        menu.get_game_version() 
Submenu menu.add_submenu(String name)
nil     menu.add_bare_item(String name,
                           function reload_function --[[ String|nil function() ]],
                           function action_function --[[ nil function() ]],
                           function on_left_function --[[ String|nil function() ]],
                           function on_right_function --[[ String|nil function() ]])
nil     menu.add_action(String name, function action_function --[[ nil function() ]])
nil     menu.add_float_range(String name, float step, float min_value, float max_value,
                             function getter --[[ Number|nil function() ]],
                             function setter --[[ nil function(Number value) ]])
nil     menu.add_int_range(String name, int step, int min_value, int  max_value,
                           function getter --[[ Integer|nil function() ]],
                           function setter --[[ nil function(Integer value) ]])
nil     menu.add_toggle(String name,
                        function getter --[[ bool|nil function() ]],
                        function setter --[[ nil function(bool value) ]])
nil     menu.clear()
Lua_ref menu.register_hotkey(Integer keycode, function callback)
Lua_ref menu.register_callback(String event, function callback) --[[
        Supported callback events:
         "OnPlayerChanged" -> function(Ped|nil oldPlayer, Ped|nil newPlayer)
         "OnPlayerStateChanged" -> function(Integer oldState, Integer newState)
         "OnVehicleChanged" -> function(Vehicle|nil oldVehicle, Vehicle|nil newVehicle)
         "OnWeaponChanged" -> function(Weapon|nil oldWeapon, Weapon|nil newWeapon)
        ]]
nil     menu.remove_hotkey(Lua_ref reference)
nil     menu.remove_callback(Lua_ref reference)
nil     menu.send_key_down(Integer keycode)
nil     menu.send_key_press(Integer keycode)
nil     menu.send_key_up(Integer keycode)
nil     menu.call_airstrike()
nil     menu.call_heli_backup()
nil     menu.clear_wanted_level()
nil     menu.deliver_ammo()
nil     menu.deliver_avenger()
nil     menu.deliver_avisa()
nil     menu.deliver_bullshark()
nil     menu.deliver_dinghy()
nil     menu.deliver_kosatka()
nil     menu.deliver_minigun()
nil     menu.deliver_moc()
nil     menu.deliver_personal_vehicle()
nil     menu.deliver_resupplies()
nil     menu.deliver_seasparrow()
nil     menu.deliver_terrorbyte()
nil     menu.detach_objects()
nil     menu.disconnect_session()
nil     menu.empty_session()
nil     menu.end_cutscene()
nil     menu.enter_personal_vehicle()
nil     menu.heal_all()
nil     menu.heal_player()
nil     menu.heal_vehicle()
nil     menu.instant_bullshark()
nil     menu.instant_drone()
nil     menu.instant_minigun()
nil     menu.instant_minitank()
nil     menu.instant_rcbandito()
nil     menu.kill_all_vehicles()
nil     menu.kill_all_enemies()
nil     menu.kill_all_mission_peds()
nil     menu.kill_all_mission_vehicles()
nil     menu.kill_all_npcs()
nil     menu.kill_current_vehicle()
nil     menu.level_current_vehicle()
nil     menu.max_all_ammo()
nil     menu.max_current_ammo()
nil     menu.refill_boost()
nil     menu.remove_cctvs()
nil     menu.remove_insurance_claims()
nil     menu.repair_online_vehicle()
nil     menu.retrieve_personal_vehicle()
nil     menu.start_choose_character()
nil     menu.start_creator_mode()
nil     menu.start_singleplayer()
nil     menu.suicide_player()
nil     menu.teleport_forward()
nil     menu.teleport_to_current_vehicle()
nil     menu.teleport_to_objective()
nil     menu.teleport_to_waypoint()
nil     menu.trigger_boat_pickup()
nil     menu.trigger_bunker_production()
nil     menu.trigger_bunker_research()
nil     menu.trigger_heli_pickup()
nil     menu.trigger_heli_vip_pickup()
nil     menu.trigger_mc_production()
nil     menu.trigger_nightclub_production()
bool    menu.get_assisted_aim()
bool    menu.get_big_map()
bool    menu.get_bribe_authorities()
bool    menu.get_cops_turn_blind_eye()
bool    menu.get_disable_crash_to_sp()
bool    menu.get_disable_send_to_island()
bool    menu.get_disable_send_to_job()
bool    menu.get_disable_teleport_to_apartment()
bool    menu.get_disable_vehicle_kick()
bool    menu.get_disable_weather_control()
bool    menu.get_ghost_organisation()
bool    menu.get_nightvision()
bool    menu.get_offradar()
bool    menu.get_out_of_sight()
bool    menu.get_passive()
bool    menu.get_reveal_player()
bool    menu.get_thermalvision()
nil     menu.set_assisted_aim(bool value)
nil     menu.set_big_map(bool value)
nil     menu.set_bribe_authorities(bool value)
nil     menu.set_cops_turn_blind_eye(bool value)
nil     menu.set_disable_crash_to_sp(bool value)
nil     menu.set_disable_send_to_island(bool value)
nil     menu.set_disable_send_to_job(bool value)
nil     menu.set_disable_teleport_to_apartment(bool value)
nil     menu.set_disable_vehicle_kick(bool value)
nil     menu.set_disable_weather_control(bool value)
nil     menu.set_ghost_organisation(bool value)
nil     menu.set_nightvision(bool value)
nil     menu.set_offradar(bool value)
nil     menu.set_out_of_sight(bool value)
nil     menu.set_passive(bool value)
nil     menu.set_reveal_player(bool value)
nil     menu.set_thermalvision(bool value)


---------------------------------------
-- Ped:
---------------------------------------
Iterator<Integer> 
        ped:get_all_weapon_hashes()
Integer ped:get_armour()
bool    ped:get_can_be_targeted()
bool    ped:get_config_flag(Integer index)
Vehicle ped:get_current_vehicle()
Weapon  ped:get_current_weapon()
bool    ped:get_freeze_momentum()
bool    ped:get_godmode()
Vector3 ped:get_heading()
Number  ped:get_health()
Number  ped:get_hurt_health()
bool    ped:get_infinite_ammo()
bool    ped:get_infinite_clip()
Number  ped:get_max_health()
Integer ped:get_model_hash()
Vehicle ped:get_nearest_vehicle()
bool    ped:get_no_ragdoll()
Integer ped:get_pedtype()
Integer ped:get_player_id()
Vector3 ped:get_position()
bool    ped:get_reset_flag(Integer index)
Vector3 ped:get_rotation()
Number  ped:get_run_speed()
bool    ped:get_seatbelt()
Number  ped:get_swim_speed()
Integer ped:get_wallet()
Integer ped:get_wanted_level)
bool    ped:get_weapon_enabled(Integer weapon_hash)
Weapon  ped:get_weapon_by_hash(Integer weapon_hash)
bool    ped:is_in_vehicle()
nil     ped:set_armour(Integer value)
nil     ped:set_can_be_targeted(bool value)
nil     ped:set_config_flag(Integer index, bool value)
nil     ped:set_freeze_momentum(bool value)
nil     ped:set_godmode(bool value)
nil     ped:set_health(Number value)
nil     ped:set_hurt_health(Number value)
nil     ped:set_infinite_ammo(bool value)
nil     ped:set_infinite_clip(bool value)
nil     ped:set_max_health(Number value)
nil     ped:set_no_ragdoll(bool value)
nil     ped:set_position(vector3 value)
nil     ped:set_reset_flag(Integer index, bool value)
nil     ped:set_rotation(vector3 value)
nil     ped:set_run_speed(Number value)
nil     ped:set_swim_speed(Number value)
nil     ped:set_wallet(Integer value)
nil     ped:set_wanted_level(Integer value)
nil     ped:set_weapon_enabled(Integer weapon_hash, bool value)


---------------------------------------
-- Pickup:
---------------------------------------
Integer pickup:get_amount()
Number  pickup:get_health()
Integer pickup:get_model_hash()
Integer pickup:get_pickup_hash()
Vector3 pickup:get_position()
Vector3 pickup:get_rotation()
nil     pickup:set_amount(Integer value)
nil     pickup:set_health(Number value)
nil     pickup:set_model_hash(Integer value)
nil     pickup:set_model_hash(String value)
nil     pickup:set_pickup_hash(Integer value)
nil     pickup:set_pickup_hash(String value)
nil     pickup:set_position(vector3 value)
nil     pickup:set_rotation(vector3 value)


---------------------------------------
-- Player:
---------------------------------------
Integer player.get_number_of_players()
String  player.get_player_name(Integer i)
ped     player.get_player_ped(Integer i)


---------------------------------------
-- Replayinterface:
---------------------------------------
Iterator<ped>
        replayinterface.get_peds()
Iterator<pickup>
        replayinterface.get_pickups()
Iterator<vehicle>
        replayinterface.get_vehicles()


---------------------------------------
-- Script:
---------------------------------------
script  script(Integer scriptNameHash)
script  script(String scriptName)
bool    script:get_bool(Integer index)
Number  script:get_float(Integer index)
Integer script:get_int(Integer index)
String  script:get_string(Integer index, Integer maxSize)
Integer script:get_uint(Integer index)
bool    script:is_active()
nil     script:set_bool(Integer index, bool value)
nil     script:set_float(Integer index, Number value)
nil     script:set_int(Integer index, Integer value)
nil     script:set_string(Integer index, String value, Integer maxSize)
nil     script:set_uint(Integer index, Integer value)


---------------------------------------
-- Stats:
---------------------------------------
bool    stats.get_bool(Integer hash)
bool    stats.get_bool(String statName)
bool    stats.get_bool_masked(Integer hash, Integer bitIndex)
bool    stats.get_bool_masked(String statName, Integer bitIndex)
Number  stats.get_float(Integer hash)
Number  stats.get_float(String statName)
Integer stats.get_int(Integer hash)
Integer stats.get_int(String statName)
Integer stats.get_masked_int(Integer hash, Integer bitStart, Integer bitSize)
Integer stats.get_masked_int(String statName, Integer bitStart, Integer bitSize)
bool    stats.set_bool(Integer hash, bool value)
bool    stats.set_bool(String statName, bool value)
bool    stats.set_bool_masked(Integer hash, bool value, Integer bitIndex)
bool    stats.set_bool_masked(String statName, bool value, Integer bitIndex)
bool    stats.set_float(Integer hash, Number value)
bool    stats.set_float(String statName, Number value)
bool    stats.set_int(Integer hash, Integer value)
bool    stats.set_int(String statName, Integer value)
bool    stats.set_masked_int(Integer hash, Integer value, Integer bitStart, Integer bitSize)
bool    stats.set_masked_int(String statName, Integer value, Integer bitStart, Integer bitSize)


---------------------------------------
-- Submenu:
---------------------------------------
Submenu submenu:add_submenu(String name)
nil     submenu:add_bare_item(String name,
                              function reload_function --[[ String|nil function() ]],
                              function action_function --[[ nil function() ]],
                              function on_left_function --[[ String|nil function() ]],
                              function on_right_function --[[ String|nil function() ]])
nil     submenu:add_action(String name, function action_function --[[ nil function() ]])
nil     submenu:add_float_range(String name, float step, float min_value, float max_value,
                                function getter --[[ Number|nil function() ]],
                                function setter --[[ nil function(Number value) ]])
nil     submenu:add_int_range(String name, int step, int min_value, int  max_value,
                              function getter --[[ Integer|nil function() ]],
                              function setter --[[ nil function(Integer value) ]])
nil     submenu:add_toggle(String name,
                           function getter --[[ bool|nil function() ]],
                           function setter --[[ nil function(bool value) ]])
nil     submenu:clear()


---------------------------------------
-- Vehicle:
---------------------------------------
Number  vehicle:get_acceleration()
Integer vehicle:get_bomb_count()
bool    vehicle:get_boost()
bool    vehicle:get_boost_active()
bool    vehicle:get_boost_enabled()
Number  vehicle:get_bouyance()
Number  vehicle:get_brake_bias_front()
Number  vehicle:get_brake_force()
bool    vehicle:get_bulletproof_tires()
bool    vehicle:get_can_be_targeted()
bool    vehicle:get_can_be_visibly_damaged()
Number  vehicle:get_collision_damage_multiplier()
Integer vehicle:get_countermeasure_count()
bool    vehicle:get_create_money_pickups()
Number  vehicle:get_deformation_damage_multiplier()
Integer vehicle:get_door_lock_state()
Number  vehicle:get_dirt_level()
bool    vehicle:get_drift_tyres_enabled()
Number  vehicle:get_drift_vehicle_reduced_suspension()
Number  vehicle:get_drive_bias_front()
Number  vehicle:get_engine_damage_multiplier()
Number  vehicle:get_gravity()
bool    vehicle:get_godmode()
Number  vehicle:get_handbrake_force()
Vector3 vehicle:get_heading()
Number  vehicle:get_health()
Number  vehicle:get_initial_drive_force()
Integer vehicle:get_initial_drive_gears()
Number  vehicle:get_initial_drive_max_flat_velocity()
Number  vehicle:get_mass()
Number  vehicle:get_max_health()
Number  vehicle:get_max_speed()
Integer vehicle:get_mission_flags()
Integer vehicle:get_model_hash()
Integer vehicle:get_number_plate_index()
String  vehicle:get_number_plate_text)
Integer vehicle:get_parachute_hash()
Integer vehicle:get_parachute_texture_variation()
Vector3 vehicle:get_position()
Vector3 vehicle:get_rotation()
Number  vehicle:get_suspension_bias_front()
Number  vehicle:get_suspension_force()
Number  vehicle:get_suspension_height()
Number  vehicle:get_traction_bias_front()
Number  vehicle:get_traction_curve_max()
Number  vehicle:get_traction_curve_min()
Vector3 vehicle:get_velocity()
Number  vehicle:get_weapon_damage_multiplier()
bool    vehicle:get_window_collisions_disabled()
Integer vehicle:get_window_tint()
nil     vehicle:set_acceleration(Number value)
nil     vehicle:set_bomb_count(Integer value)
nil     vehicle:set_boost(bool value)
nil     vehicle:set_boost_enabled(bool value)
nil     vehicle:set_bouyance(Number value)
nil     vehicle:set_brake_bias_front(Number value)
nil     vehicle:set_brake_force(Number value)
nil     vehicle:set_bulletproof_tires(bool value)
nil     vehicle:set_can_be_targeted(bool value)
nil     vehicle:set_can_be_visibly_damaged(bool value)
nil     vehicle:set_collision_damage_multiplier(Number value)
nil     vehicle:set_countermeasure_count(Integer value)
nil     vehicle:set_create_money_pickups(bool value)
nil     vehicle:set_deformation_damage_multiplier(Number value)
nil     vehicle:set_door_lock_state(Integer value)
nil     vehicle:set_drive_bias_front(Number value)
nil     vehicle:set_dirt_level(Number value)
nil     vehicle:set_drift_tyres_enabled(bool value)
nil     vehicle:set_drift_vehicle_reduced_suspension(bool value)
nil     vehicle:set_engine_damage_multiplier(Number value)
nil     vehicle:set_gravity(Number value)
nil     vehicle:set_godmode(bool value)
nil     vehicle:set_handbrake_force(Number value)
nil     vehicle:set_health(Number value)
nil     vehicle:set_initial_drive_force(Number value)
nil     vehicle:set_initial_drive_gears(Integer value)
nil     vehicle:set_initial_drive_max_flat_velocity(Number value)
nil     vehicle:set_mass(Number value)
nil     vehicle:set_max_speed(Number value)
nil     vehicle:set_model_hash(Integer value)
nil     vehicle:set_number_plate_index(Integer value)
nil     vehicle:set_number_plate_text(String value)
nil     vehicle:set_parachute_hash(Integer value)
nil     vehicle:set_parachute_texture_variation(Integer value)
nil     vehicle:set_position(vector3 value)
nil     vehicle:set_rotation(vector3 value)
nil     vehicle:set_suspension_bias_front(Number value)
nil     vehicle:set_suspension_force(Number value)
nil     vehicle:set_suspension_height(Number value)
nil     vehicle:set_traction_bias_front(Number value)
nil     vehicle:set_traction_curve_max(Number value)
nil     vehicle:set_traction_curve_min(Number value)
nil     vehicle:set_weapon_damage_multiplier(Number value)
nil     vehicle:set_window_collisions_disabled(bool value)
nil     vehicle:set_window_tint(Integer value)


---------------------------------------
-- Weapon:
---------------------------------------
Number  weapon:get_ai_sound_range()
Number  weapon:get_aim_fov()
Number  weapon:get_bullet_damage()
Integer weapon:get_current_ammo()
Integer weapon:get_damage_type()
Integer weapon:get_explosion_type()
Integer weapon:get_fire_type()
Number  weapon:Weapon, get_heli_force()
bool    weapon:get_infinite_ammo()
Number  weapon:get_lock_on_range()
Integer weapon:get_max_ammo()
Integer weapon:get_max_mp_ammo()
Integer weapon:get_model_hash()
Integer weapon:get_name_hash()
Number  weapon:get_ped_force()
Number  weapon:get_range()
Number  weapon:get_reload_time_multiplier()
Integer weapon:get_slot_hash()
Number  weapon:get_time_between_shots()
Number  weapon:get_spread()
Number  weapon:get_vehicle_force()
nil     weapon:set_ai_sound_range(Number value)
nil     weapon:set_aim_fov(Number value)
nil     weapon:set_bullet_damage(Number value)
nil     weapon:set_current_ammo(Integer value)
nil     weapon:set_damage_type(Integer value)
nil     weapon:set_explosion_type(Integer value)
nil     weapon:set_heli_force(Number value)
nil     weapon:set_infinite_ammo(bool value)
nil     weapon:set_lock_on_range(Number value)
nil     weapon:set_ped_force(Number value)
nil     weapon:set_range(Number value)
nil     weapon:set_reload_time_multiplier(Number value)
nil     weapon:set_spread(Number value)
nil     weapon:set_time_between_shots(Number value)
nil     weapon:set_vehicle_force(Number value)
